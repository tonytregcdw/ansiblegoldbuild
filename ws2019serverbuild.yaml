- hosts: azws2019
  gather_facts: false
  vars:
    adds_fqdn: ttlab.local
    adds_admin_user: ttwinrm@ttlab.local 
    adds_admin_pass: Ansiblem@nage
    adds_ou_path: "OU=SessionHosts,OU=Citrix,OU=Infra,DC=ttlab,DC=local"
    appinstall_path: \\WS2019ADDS01\applications
    ansible_become: yes
    ansible_become_method: runas
    ansible_become_user: "{{ adds_admin_user }}"
    ansible_become_password: "{{ adds_admin_pass }}"
    ansible_become_flags: logon_type=new_credentials logon_flags=netcredentials_only    
    
  tasks:

  - name: Set an environment variable for app installation path
    win_environment:
      state: present
      name: appinstall
      value: "{{ appinstall_path }}"
      level: machine

  - name: join AD DS domain
    win_domain_membership:
      dns_domain_name: "{{ adds_fqdn }}"
      domain_admin_user: "{{ adds_admin_user }}"
      domain_admin_password: "{{ adds_admin_pass }}"
      domain_ou_path: "{{ adds_ou_path }}"
      state: domain
    register: domain_state

  - win_reboot:
    when: domain_state.reboot_required
   
  - name: install admin tools
    win_feature:
      name: RSAT-Role-Tools
      state: present

  - name: install gpmc
    win_feature:
      name: GPMC
      state: present

  - name: install net framework core
    win_feature:
      name: NET-Framework-45-Core
      state: present

  - name: Windows Process Activation Service (WAS)
    win_feature:
      name: WAS
      state: present

  - name: install chocolately
    win_shell: iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
    args:
      creates: C:\ProgramData\chocolatey\bin\choco.exe
      
 
# Deploy WSL Ubuntu 1804 on WS2019

  - name: enable WSL
    win_feature:
      name: Microsoft-Windows-Subsystem-Linux
      state: present 

  - name: Reboot post WSL enable
    win_reboot:

  - name: Run command that only runs if a specified folder doesnt exist
    win_shell: mkdir c:\ansible
    args:
      creates: C:\ansible\    
  
  - name: Download Ubuntu for WSL
    win_shell: |
      curl.exe -L -o ubuntu-1804.appx https://aka.ms/wsl-ubuntu-1804
      Rename-Item ubuntu-1804.appx ubuntu-1804.zip
      Expand-Archive ubuntu-1804.zip ubuntu1804
    args:
      chdir: C:\ansible\
      creates: C:\ansible\ubuntu-1804.zip

#  - name: map a drive to application installation source
#    win_mapped_drive:
#      letter: M
#      path: "{{ appinstall_path }}"

  - name: Reboot post dependency installations
    win_reboot:

    
# Install hosting platform tools

#  - name: Install VMware Tools
#    win_shell: cmd /c "$env:appinstall\VMware Tools 10.\Install-VMwareTools-x64.CMD"

# OS Customisation
      
#  - name: reg key example
#    win_regedit:
#      path: HKLM:\Software\TTLAB
#      name: hello
#      data: world
      
#  - name: dword reg key example
#    win_regedit:
#      path: HKLM:\Software\TTLAB
#      name: hellod
#      data: 1
#      type: dword

#  - name: Run a multiple powershell commands
#    win_shell: |
#      New-Item -Path C:\temp -ItemType Directory
#      New-Item -Path C:\temp\ansible -ItemType Directory
#      write-host hello-mate >> c:\temp\ansible\test.txt

#  - name: Run a command under cmd
#    win_shell: echo ansible test >> C:\temp\test.txt && echo still here >> c:\temp\test.txt
#    args:
#      executable: cmd.exe

   
# Install applications


  - name: Install notepad-plus-plus
    win_package:
      path: https://notepad-plus-plus.org/repository/7.x/7.0/npp.7.Installer.x64.exe
      product_id: Notepad++
      arguments: /S
      state: present


 
# Install Citrix Storefront

#  - name: install IIS
#    win_feature:
#      name: Web-Default-Doc,Web-Http-Errors,Web-Static-Content,Web-Http-Redirect,Web-Http-Logging,Web-Filtering,Web-Basic-Auth,Web-Windows-Auth,Web-Net-Ext45,Web-AppInit,Web-Asp-Net45,Web-ISAPI-Ext,Web-ISAPI-Filter,Web-Mgmt-Console,Web-Scripting-Tools,NET-Framework-45-ASPNET
#      state: present

#  - name: Reboot IIS install reboot
#    win_reboot:
           
#  - name: Install Citrix storefront
#    win_shell: cmd /c "$env:appinstall\Citrix XenDesktop 2012\x64\Storefront\CitrixStoreFront-x64.exe" -silent

# Install Citrix DDC

  - name: Install Citrix DDC
    win_shell: cmd /c "$env:appinstall\Citrix XenDesktop 2012\x64\XenDesktop Setup\XenDesktopServerSetup.exe" /components controller,desktopstudio /configure_firewall /nosql /noreboot /quiet

